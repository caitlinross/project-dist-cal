What has been done so far:

The full Wuu and Bernstein algorithm has been implemented, but not fully tested.
Sockets set up and message passing has been tested between 2 computers.
socket connections are using threads, synchronization has just been added, but not tested.
Writing to log has been implemented.
Very simple UI set up for creating appointments


What still needs to be done:
- appointment conflict resolution (Caitlin)
- add in appointment cancellation (in UI) (Erika)
- add in view appointments feature to UI (Erika)
- test on AWS
- write report of design and implementation



maybe still needs to be done??
- need to keep track of when processes are up/down (Caitlin)
- keep queue of messages that have tried to send when process is down (Caitlin)
    -- actually for last two, we might not need to do anything if the message can't be sent
    those events should be sent at a later time because the sending node won't update it's info of the
    crashed node until it receives a message from that node, so sending node will just try to send those 
    events (and newer events) the next time it wants to send a message
    -- I'm not completely convinced this is right though.

